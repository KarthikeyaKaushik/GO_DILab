# BASIC GAME
numpy
    # for morphological operations in Board, via Karthikeya
scipy


# GUI
pygame


# CREATE TRAINING DATA
sgf


# TRAIN
keras
tensorflow
    # save_weights from keras requires this
h5py


# PLAY
    # for forward-prediction in the NN-Bot we currently use theano because tensorflow
    # doesn't like not being in the main thread (pygame is in the main thread)
theano


# DEPRECATED
# matplotlib
    # is required by Karthikeyas learn-script, can probably be realized using a keras function or manually
# scikit-learn


# COMMENTS

# tensorflow on Windows seems to require the 64-bit version of Python

# keras works with tensorflow or theano as backend
# in ~.keras\keras.json the backend is defined, can also be changed at runtime though

# pyinstaller: to build an executable from GTPengine
# if pyinstaller throws AttributeError: module 'enum' has no attribute 'IntFlag',
# run 'pip uninstall enum34' (via stackoverflow.com/a/45716067)

# ensure "tensorflow" is written in ~.keras\keras.json and remove theano traces from the bots imported
# read the model.json and weights.h5 from: os.path.join(sys._MEIPASS, 'model.json'), sys._MEIPASS is the temporary
# folder pyinstaller creates when packing the --onefile (via stackoverflow.com/a/13790741/2474159)
#
# pyinstaller --onefile .\src\play\controller\GTPengine.py --add-data ".\src\learn\dev_ben\model_architecture.json;." --add-data ".\src\learn\dev_ben\model_weights.h5;."
#
# if tensorflow throws errors regarding MSVCP140.DLL, try installing the Visual C++ 2015 redistributable:
# www.tensorflow.org/versions/r0.12/get_started/os_setup#pip_installation_on_windows
#
# "How to deploy PyQt, Keras, Tensorflow apps with PyInstaller": youtu.be/fLQg8dgB7cA
